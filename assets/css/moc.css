@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200&display=swap');
:root {
	/* NUMBERS */
	/* ...... */
	--ratio: 1.2;
	--s-5: calc(var(--s-4) / var(--ratio));
	--s-4: calc(var(--s-3) / var(--ratio));
	--s-3: calc(var(--s-2) / var(--ratio));
	--s-2: calc(var(--s-1) / var(--ratio));
	--s-1: calc(var(--s0) / var(--ratio));
	--s0: 1rem;
	--s1: calc(var(--s0) * var(--ratio));
	--s2: calc(var(--s1) * var(--ratio));
	--s3: calc(var(--s2) * var(--ratio));
	--s4: calc(var(--s3) * var(--ratio));
	--s5: calc(var(--s4) * var(--ratio));

	/* SPACES */
	--border-thin: 2px;
	--border-thick: 15px;
	--sm-space: 0.5rem;
	--med-space: 0.75rem;
	--lg-space: 1.225rem;
	--gutter:1em

	/* --measure whould be between 45 and 75 ch units for good readiing experience */
	--measure: 70ch;
	/* ... */

	/* COLOURS */
	--color-light: rgb(124, 126, 139);
	--color-dark: hsl(241, 32%, 55%);

	/* primary color block */
	--primary-color-100: hsl(240, 100%, 100%);
	--primary-color-300: hsl(240, 40%, 60%);
	--primary-color-600: hsl(34, 79%, 16%);
	--primary-color-900: hsl(240, 80%, 10%);
	/* secondary color block */
	--secondary-color-100: hsl(36, 30%, 30%);
	--secondary-color-300: hsl(36, 40%, 60%);
	--secondary-color-600: hsl(36, 60%, 30%);
	--secondary-color-900: hsl(36, 80%, 10%);
}
* {
	font-family: Poppins;
}
/* reset list */
ol,
ul,
li,
a {
	list-style: none;
	margin: 0;
	padding: 0;
	text-decoration: none;
}
* {
	max-inline-size: 75ch;
	/* --measure whould be between 45 and 75 ch units for good reading experience */
}
/* h1,h2,h3,h4,h5,h6{
	margin: 0;
} */

html,
body,
main,
div,
header,
nav {
	max-inline-size: none;
}

h1 {
	font-size: var(--s5);
}
h2 {
	font-size: var(--s4);
}
h3 {
	font-size: var(--s3);
}
h4 {
	font-size: var(--s2);
}
h5 {
	font-size: var(--s1);
}
h6 {
	font-size: var(--s0);
}

/* ↓ Backslash to escape the colon */
/* .font-size\:base {
	font-size: 1rem;
}

.font-size\:biggish {
	font-size: var(--font-size-biggish);
}

.font-size\:big {
	font-size: 2.25rem;
} */

.center {
	display: flex;
	flex-direction: column;
	/* This will affect alignment of headers */
	align-items: center;
	/* ... */
	box-sizing: content-box;
	max-inline-size: var(--measure);
	margin-inline: auto;
	padding-inline-start: 1em;
	padding-inline-end: 1em;
	/* This will affect text in paragraphs not headers */
	/* text-align: center; */
	/* ... */
}

.box {
	padding: var(--s-1);
	border: var(--border-thin) solid;
	border-radius: var(--border-thick, 10%);
	color: var(--color-dark);
	background-color: var(--color-light);
}

.box * {
	color: inherit;
}

.box.invert {
	color: var(--color-light);
	background-color: var(--color-dark);
}
.cluster {
	display: flex;
	flex-wrap: wrap;
	gap: 2rem;
	justify-content: space-around;
	align-items: center;
}
.header {
	background-color: pink;
}
.button {
	border-radius: 50px;
}
.button:hover {
	scale: 1.1;
}
.button:active {
	scale: 1.2;
	background-color: var(--color-dark, red);
	color: var(--color-light, red);
}
.button:active.invert {
	scale: 1.2;
	background-color: var(--color-light, red);
	color: var(--color-dark, red);
}
.parent {
	display: flex;
	flex-wrap: wrap;
	/* default align items is stretch which would give equal heights */
	align-items: flex-start;
	/* ... */
}

.parent > * {
	flex-grow: 1;
	flex-shrink: 1;
	flex-basis: 30ch;
}
.with-sidebar {
	display: flex;
	flex-wrap: wrap;
	/* default align items is stretch which would give equal heights */
	/* align-items: flex-start; */
	gap: var(--sm-space, 1em);
}

.sidebar {
	/* If sidebar contents are small could omit the next line as the width will be detemined by content - it will still break at >50% sidebar width */
	flex-basis: 20rem;
	/* ... */
	flex-grow: 1;
}
/* .sidebar img {
	max-width: 40%;
} */

.not-sidebar {
	flex-basis: 0;
	flex-grow: 999;
	min-inline-size: 50%;
}

.switcher {
	display: flex;
	flex-wrap: wrap; /* ↓ The default value is the first point on the modular scale */
	gap: var(--gutter, var(--s1)); /* ↓ The width at which the layout “breaks” */
	--threshold: 40rem;
}

.switcher > * {
	/* ↓ Allow children to grow */
	flex-grow: 1; /* ↓ Switch the layout at the --threshold */
	flex-basis: calc((var(--threshold) - 100%) * 999);
	/* gap: var(--gutter, var(--s1)); */
	gap: 2em;
}

.switcher > :nth-last-child(n + 5),
.switcher > :nth-last-child(n + 5) ~ * {
	/* ↓ Switch to a vertical configuration if

there are more than 4 child elements */

	flex-basis: 100%;
}
/* .switcher p{
	max-inline-size: 20em;
} */

.grid {
	display: grid;
	grid-gap: 1rem;
}

@supports (width: min(250px, 100%)) {
	.grid {
		grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
	}
}

.stack {
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
}

.stack > * {
	margin-block: 0;
}

.stack > * + * {
	margin-block-start: var(--space, 1.5rem);
}
.stack img {
	/* width: 100%; */
	max-inline-size: 100%;
}

.frame {
	--n: 16;
	--d: 9;
	aspect-ratio: var(--n) / var(--d);
	overflow: hidden;
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 15px;
}

.frame > img,
.frame > video {
	inline-size: 100%;
	block-size: 100%;
	object-fit: cover;
}

.reel {
	display: flex;
	/* ↓ We only want horizontal scrolling */
	overflow-x: auto;
	/* ↓ First value: thumb; second value: track */
	scrollbar-color: var(--color-light) var(--color-dark);
	gap: var(--s1);
}
.reel::-webkit-scrollbar {
	block-size: 1rem;
}

.reel::-webkit-scrollbar-track {
	background-color: var(--color-dark);
}

.reel::-webkit-scrollbar-thumb {
	background-color: var(--color-dark);
	background-image: linear-gradient(
		var(--color-dark) 0,
		var(--color-dark) 0.25rem,
		var(--color-light) 0.25rem,
		var(--color-light) 0.75rem,
		var(--color-dark) 0.75rem
	);
}

.reel {
	block-size: 50vh;
}

.reel > img {
	block-size: 100%;
	width: auto;
}

.imposter {
	position: fixed;
	inset-block-start: 50%;
	inset-inline-start: 50%;
	transform: translate(-50%, -50%);
}

.imposter.contain {
	--margin: 10px;
	overflow: auto;
	max-inline-size: calc(100% - (var(--margin) * 2));
	max-block-size: calc(100% - (var(--margin) * 2));
}
.hide {
	display: none;
}
